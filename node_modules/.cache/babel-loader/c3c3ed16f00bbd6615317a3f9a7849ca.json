{"ast":null,"code":"var _jsxFileName = \"c:\\\\DevProjects\\\\jammming\\\\Jammming\\\\src\\\\Components\\\\App\\\\App.js\";\nimport React, { Component } from 'react';\nimport './reset.css';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: '',\n      searchResults: [],\n      playlistName: '',\n      playlistTracks: []\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n    Spotify.getAccessToken();\n  } //Add track from SearchResults to Playlist\n\n\n  addTrack(track) {\n    let trackExists = false;\n    let updatedTracks = this.state.playlistTracks;\n    this.state.playlistTracks.map(playlistTrack => {\n      if (playlistTrack.id === track.id) {\n        return trackExists = true;\n      }\n    });\n\n    if (!trackExists) {\n      updatedTracks.push({\n        id: track.id,\n        name: track.name,\n        artist: track.artist,\n        album: track.album,\n        uri: track.uri\n      });\n    }\n\n    this.setState({\n      playlistTracks: updatedTracks\n    });\n  } //Remove track from playlist\n\n\n  removeTrack(track) {\n    let updatedTracks = [];\n    updatedTracks = this.state.playlistTracks.filter(playlistTrack => playlistTrack.id !== track.id);\n    this.setState({\n      playlistTracks: updatedTracks\n    });\n  } //Update playlist name\n\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  } //Grab playlist name and playlist tracks uris and pass to Spotify.js savePlaylist method\n\n\n  savePlaylist() {\n    let trackURIs = [];\n    this.state.playlistTracks.map(playlistTrack => {\n      return trackURIs.push(playlistTrack.uri);\n    });\n    Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    this.setState({\n      playlistTracks: [],\n      playlistName: 'New Playlist'\n    });\n  } //Pass search term to Spotify.js search method and get results\n\n\n  search(searchTerm) {\n    Spotify.search(searchTerm).then(spotifySearchResults => {\n      this.setState({\n        searchResults: spotifySearchResults\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Ja\", React.createElement(\"span\", {\n      className: \"highlight\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"mmm\"), \"ing\"), React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onSearch: this.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["c:\\DevProjects\\jammming\\Jammming\\src\\Components\\App\\App.js"],"names":["React","Component","SearchBar","SearchResults","Playlist","Spotify","App","constructor","props","state","searchTerm","searchResults","playlistName","playlistTracks","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","getAccessToken","track","trackExists","updatedTracks","map","playlistTrack","id","push","name","artist","album","uri","setState","filter","trackURIs","then","spotifySearchResults","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './reset.css';\r\nimport './App.css';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport SearchResults from '../SearchResults/SearchResults';\r\nimport Playlist from '../Playlist/Playlist';\r\nimport Spotify from '../../util/Spotify';\r\n\r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      searchTerm: '',\r\n      searchResults:[],\r\n      playlistName: '',\r\n      playlistTracks:[]\r\n    }\r\n\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this);\r\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n    this.savePlaylist = this.savePlaylist.bind(this);\r\n    this.search = this.search.bind(this);\r\n    Spotify.getAccessToken();\r\n  }\r\n\r\n  //Add track from SearchResults to Playlist\r\n  addTrack(track){\r\n    let trackExists = false;\r\n    let updatedTracks = this.state.playlistTracks;\r\n    this.state.playlistTracks.map(playlistTrack=>{\r\n      if(playlistTrack.id===track.id){\r\n        return trackExists = true;\r\n      }\r\n    });\r\n    if (!trackExists){\r\n      updatedTracks.push({\r\n        id: track.id,\r\n        name: track.name,\r\n        artist: track.artist,\r\n        album: track.album,\r\n        uri: track.uri\r\n      })\r\n    }\r\n    this.setState({\r\n     playlistTracks: updatedTracks\r\n    });\r\n  }\r\n\r\n  //Remove track from playlist\r\n  removeTrack(track){\r\n    let updatedTracks = [];\r\n    updatedTracks = this.state.playlistTracks.filter(playlistTrack=>playlistTrack.id!==track.id);\r\n    this.setState({\r\n      playlistTracks: updatedTracks\r\n    });\r\n  }\r\n\r\n  //Update playlist name\r\n  updatePlaylistName(name){\r\n    this.setState({\r\n     playlistName: name\r\n    });\r\n  }\r\n\r\n  //Grab playlist name and playlist tracks uris and pass to Spotify.js savePlaylist method\r\n  savePlaylist(){\r\n    let trackURIs = [];\r\n    this.state.playlistTracks.map(playlistTrack=>{\r\n      return trackURIs.push(playlistTrack.uri);\r\n    });\r\n    Spotify.savePlaylist(this.state.playlistName,trackURIs);\r\n    this.setState({\r\n     playlistTracks: [],\r\n     playlistName: 'New Playlist'\r\n    });\r\n  }\r\n\r\n  //Pass search term to Spotify.js search method and get results\r\n  search(searchTerm){\r\n    Spotify.search(searchTerm).then(spotifySearchResults=>{\r\n      this.setState({\r\n       searchResults: spotifySearchResults\r\n      })\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\r\n        <div className=\"App\">\r\n          {/* Add a SearchBar component */}\r\n          <SearchBar onSearch={this.search} />\r\n          <div className=\"App-playlist\">\r\n            {/* Add a SearchResults component */}\r\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\r\n            {/* Add a Playlist component */}\r\n            <Playlist\r\n              playlistName={this.state.playlistName}\r\n              playlistTracks={this.state.playlistTracks}\r\n              onRemove={this.removeTrack}\r\n              onNameChange={this.updatePlaylistName}\r\n              onSave={this.savePlaylist} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}